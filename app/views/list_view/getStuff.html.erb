<% cuid = current_user.id %>


<script>
function success(position) {
	document.querySelector("#therowsinthebody").innerHTML = '<% for i in 0...CheckIn.most_recent(cuid).length %><%=	raw "<div class=\"row card\">" %><%= raw "<div class=\"col-md-12 listrow\">" + User.find(CheckIn.most_recent(cuid)[i][:user_id])[:name] + "<span class=\"right\">\'+getDistanceFromLatLonInMi(" + CheckIn.most_recent(cuid)[i][:latitude].to_s + ", " + CheckIn.most_recent(cuid)[i][:longitude].to_s + ", position.coords.latitude, position.coords.longitude)+\'</span></div>" %><%= raw "</div>" %><% end %><% if CheckIn.most_recent(cuid).length == 0 %><%= raw "<div class=\"card\">No recent friends</div>" %><% end %>';
}

function getDistanceFromLatLonInMi(lat1,lon1,lat2,lon2) {
	var R = 6371; // Radius of the earth in km
	var dLat = deg2rad(lat2-lat1);  // deg2rad below
	var dLon = deg2rad(lon2-lon1); 
	var a = 
	Math.sin(dLat/2) * Math.sin(dLat/2) +
	Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
	Math.sin(dLon/2) * Math.sin(dLon/2)
	; 
	var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
	var d = R * c; // Distance in km
	var dInMi = d*0.621371; // American units
	return (dInMi < 0.1 ? "<0.1 mi" : dInMi.toString() + " mi"); 
}

function deg2rad(deg) {
  return deg * (Math.PI/180)
}

function error(msg) {
	var s = document.querySelector('#status');
	s.innerHTML = typeof msg == 'string' ? msg : "failed";
	s.className = 'fail';
}

if (navigator.geolocation) {
	navigator.geolocation.getCurrentPosition(success, error);
} else {
	error('not supported');
}
</script>
<div id="therowsinthebody">
</div>

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=geometry&sensor=false"></script>