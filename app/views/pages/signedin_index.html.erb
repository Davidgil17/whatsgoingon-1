<% cuid = current_user.id %>
<div class="center">

	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry&sensor=false"></script>

	<article>
		<p id="loading">Finding your location: <span id="status">checking...</span></p>
	</article>
	<script>

		var map;
		var latlng;
		var markers;
		var infoWindows;
		var eventmarkers;

		function success(position) {
			var s = document.querySelector('#status');

			if (s.className == 'success') {
		    	// not sure why we're hitting this twice in FF, I think it's to do with a cached result coming back    
		    	return;
			}

			s.innerHTML = "found you!";
			s.className = 'success';

			var mapcanvas = document.createElement('div');
			mapcanvas.id = 'mapcanvas';
			mapcanvas.style.height = ($(document).height() - 51) + 'px';
			mapcanvas.style.width = ($(document).width()) + 'px';

			$("#loading").css("display","none");

			

			document.querySelector('article').appendChild(mapcanvas);

			latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

			var myOptions = {
				zoom: 18,
				center: latlng,
				zoomControl: false,
				streetViewControl: false,
				navigationControlOptions: {style: google.maps.NavigationControlStyle.DEFAULT},
				mapTypeId: google.maps.MapTypeId.ROADMAP,
				mapTypeControl: true,
    			mapTypeControlOptions: {
      			style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
    			}
			};
			map = new google.maps.Map(document.getElementById("mapcanvas"), myOptions);

			<% if (params.has_key?(:lat) && params.has_key?(:lng)) && params[:lat] != "" && params[:lng] != "" %>
			<%= "map.setCenter(new google.maps.LatLng(" + params[:lat] + ", " + params[:lng] + "));" %>
			<% end %>

			markers = [];
			infoWindows = [];
			eventmarkers = [];
			
//******HERE STARTS MAPPING OF BRANDEIS*************//
		var buildings = <%= raw buildings.inspect %>;

		<% buildingsArraySize = 60 %>
		var opac = 0;
		<%= render file: "pages/buildings.js", layout: false, content_type: 'text/plain' %>

	  	<% for i in 0..buildingsArraySize %>
	  	<%= raw "building" + i.to_s + ".setMap(map);" %>
	  	<% end %>  
//*********HERE ENDS MAPPING OF BRANDEIS********************************//

			var mymarker = new google.maps.Marker({
				position: latlng, 
				map: map, 
				title:"You are here! (at least within a "+position.coords.accuracy+" meter radius)",
				zIndex: 2,
				<% imgpath = asset_path('marker' + current_user.color_status.to_s + '.png') %>

				<%= raw "icon: '" + imgpath + "'" %>

			});
			markers.push(mymarker);
			
			var myinfowindow = new google.maps.InfoWindow({
				content: "You are here!"
			});
			infoWindows.push(myinfowindow);

			google.maps.event.addListener(mymarker, 'click', function() {
				for (var i = 0; i < infoWindows.length; i++) {
					infoWindows[i].close();
				}
				myinfowindow.open(map, mymarker);
			});

			<% most_recent_friends = Friend.most_recent(cuid) %>
			<% for i in 0...most_recent_friends.length %>
			<%=	raw "var newlatlng"+i.to_s+" = new google.maps.LatLng(" + most_recent_friends[i][:latitude].to_s + ", " + most_recent_friends[i][:longitude].to_s + ");" %>
			<% imgpath = asset_path('marker' + most_recent_friends[i][:color_status].to_s + '.png') %>
			<%= raw "var newmarker"+i.to_s+" = new google.maps.Marker({position: newlatlng"+i.to_s+", map: map, icon: '" + imgpath + "' });" %>
			<%= raw "markers.push(newmarker"+i.to_s+");" %>
			<%= raw "var myinfowindow"+i.to_s+" = new google.maps.InfoWindow({content: \"" + most_recent_friends[i][:name] + "\" });" %>
			<%= raw "infoWindows.push(myinfowindow"+i.to_s+");" %>
			<%= raw "google.maps.event.addListener(newmarker"+i.to_s+", \'click\', function() {for (var i = 0; i < infoWindows.length; i++) {infoWindows[i].close();}myinfowindow"+i.to_s+".open(map, newmarker"+i.to_s+");});" %>
			<% end %>

			<% my_current_events = Event.find_events(cuid) %>
			<% for i in 0...my_current_events.length %>
			<%=	raw "var eventlatlng"+i.to_s+" = new google.maps.LatLng(" + my_current_events[i][:latitude].to_s + ", " + my_current_events[i][:longitude].to_s + ");" %>
			<% imgpath = asset_path('EventMarker.png') %>
			<%= raw "var eventnewmarker"+i.to_s+" = new google.maps.Marker({position: eventlatlng"+i.to_s+", map: map, draggable: true , icon: '" + imgpath + "' });" %>
			<%= raw "eventmarkers.push(eventnewmarker"+i.to_s+");" %>
			<%= raw "var eventInfoWindow"+i.to_s+" = new google.maps.InfoWindow({content: \"" + my_current_events[i][:title] + "\" });" %>
			<%= raw "infoWindows.push(eventInfoWindow"+i.to_s+");" %>
			<%= raw "google.maps.event.addListener(eventnewmarker"+i.to_s+", \'click\', function() {for (var i = 0; i < infoWindows.length; i++) {infoWindows[i].close();}eventInfoWindow"+i.to_s+".open(map, eventnewmarker"+i.to_s+");});" %>
			<%= raw "google.maps.event.addListener(eventnewmarker"+i.to_s+", 'mouseup', function() { $.ajax({ type: 'POST', url: '/events/update_location', data: { event_ids: " + my_current_events[i][:id].to_s + ", lat: " + my_current_events[i][:latitude].to_s + ", lng: " + my_current_events[i][:longitude].to_s + " }, success: function() { } }); });" %>
			<% end %>


			var mybuilding = "";
		  	<% for i in 0..buildingsArraySize %>
		  	<%= raw "if (google.maps.geometry.poly.containsLocation(latlng,building" +i.to_s+ ")) { mybuilding = buildings[" + i.to_s + "];}" %>
		  	<% end %>
		
			$.ajax({
			    type: 'POST',  
			    url: 'users/update_location', 
			    data: { latitude: latlng.lat(), longitude: latlng.lng(), location: mybuilding },
			    success: function(response) {
			    }
			});

			setInterval(function() {
			    $.ajax({  
				    type: 'POST',  
				    url: 'users/update_location', 
				    data: { latitude: latlng.lat(), longitude: latlng.lng(), location: mybuilding },
				    success: function(response) {
				    }
				});
			}, 10 * 60 * 1000); // 10 * 60 * 1000 milsec

//// ******** REFRESH BUTTON

			// Create a div to hold the control.
			var controlDiv = document.createElement('div');

			// Set CSS styles for the DIV containing the control
			// Setting padding to 5 px will offset the control
			// from the edge of the map.
			controlDiv.style.padding = '5px';

			// Set CSS for the control border.
			var controlUI = document.createElement('div');
			controlUI.style.backgroundColor = 'white';
			controlUI.style.cursor = 'pointer';
			controlUI.style.textAlign = 'center';
			controlUI.title = 'Click to refresh map';
			controlDiv.appendChild(controlUI);

			// Set CSS for the control interior.
			var controlText = document.createElement('div');
			controlText.style.fontFamily = 'Arial,sans-serif';
			controlText.style.fontSize = '12px';
			controlText.style.paddingLeft = '4px';
			controlText.style.paddingRight = '4px';
			controlText.innerHTML = '<strong>Refresh</strong>';
			controlUI.appendChild(controlText);

			// refresh button
			google.maps.event.addDomListener(controlUI, 'click', function() {
				// clear markers
				for (var i = 0; i < markers.length; i++) {
				    markers[i].setMap(null);
				}
				markers = [];
				// add my location
		   		var mymarker = new google.maps.Marker({
					position: latlng, 
					map: map, 
					title:"You are here! (at least within a "+position.coords.accuracy+" meter radius)",
					zIndex: 3,
					<% imgpath = asset_path('marker' + current_user.color_status.to_s.to_s + '.png') %>
					<%= raw "icon: '" + imgpath + "'" %>
				});
		
				markers.push(mymarker);
	
				var myinfowindow = new google.maps.InfoWindow({
					content: "You are here!"
				});
				infoWindows.push(myinfowindow);

				google.maps.event.addListener(mymarker, 'click', function() {
					for (var i = 0; i < infoWindows.length; i++) {
						infoWindows[i].close();
					}
					myinfowindow.open(map, mymarker);
				});
				$.getJSON( "friends/getmarkers.json", function( data ) {
					$.each( data, function( key, val ) {
			            var newlatLng = new google.maps.LatLng(val[1]['lat'], val[2]['lng']);
			            var newmarker = new google.maps.Marker({
			                position: newlatLng,
			                map: map,
			                icon: "/assets/marker" + val[3]['color_status'].toString() + ".png"
			            });
			            markers.push(newmarker);
			            var newmyinfowindow = new google.maps.InfoWindow({
							content: val[0]['name']
						});
						infoWindows.push(newmyinfowindow);
						google.maps.event.addListener(newmarker, 'click', function() {
							for (var i = 0; i < infoWindows.length; i++) {
								infoWindows[i].close();
							}
							newmyinfowindow.open(map, newmarker);
						});	
	  				});
				});

				// $.ajax({  
				//     type: 'POST',  
				//     url: 'users/update_location', 
				//     data: { latitude: latlng.lat(), longitude: latlng.lng(), location: mybuilding },
				//     success: function(response) {  
				//     }
				// });

  			});

			controlDiv.index = 1;
  			map.controls[google.maps.ControlPosition.TOP_RIGHT].push(controlDiv);

			//// ******** END REFRESH BUTTON



			//// ******** EVENT BUTTON

			// Create a div to hold the control.
			var controlDiv = document.createElement('div');

			// Set CSS styles for the DIV containing the control
			// Setting padding to 5 px will offset the control
			// from the edge of the map.
			controlDiv.style.padding = '5px';

			// Set CSS for the control border.
			var controlUI = document.createElement('div');
			controlUI.style.backgroundColor = 'white';
			controlUI.style.cursor = 'pointer';
			controlUI.style.textAlign = 'center';
			controlUI.title = 'Click to refresh map';
			controlDiv.appendChild(controlUI);

			// Set CSS for the control interior.
			var controlText = document.createElement('div');
			controlText.style.fontFamily = 'Arial,sans-serif';
			controlText.style.fontSize = '12px';
			controlText.style.paddingLeft = '4px';
			controlText.style.paddingRight = '4px';
			controlText.innerHTML = '<strong>Add Event</strong>';
			controlUI.appendChild(controlText);

			// add event button listener
			google.maps.event.addDomListener(controlUI, 'click', function() {
				$('#addEventModal').modal();
  			});

			controlDiv.index = 1;
  			map.controls[google.maps.ControlPosition.TOP_RIGHT].push(controlDiv);

			//// ******** END EVENT BUTTON


		}

		function error(msg) {
			var s = $('#status');
            s.html(typeof msg == 'string' ? msg : "failed");
            s.addClass('fail');  
		}

		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(success, error);
		} else {
			error('not supported');
		}

		// function createEvent(title, description, date) {
		// 	$('#addEventModal').modal('toggle');
		// 	alert(); 	
		// }

		function ce(title, description, start_time, end_time, groups) {
			console.log(title + " " + description + " " + start_time + " " + end_time + " " + groups);
			var eventmarker = new google.maps.Marker({
				position: latlng, 
				draggable: true,
				map: map, 
				title: title,
				zIndex: 3,
				icon: '/assets/EventMarker.png'
			});
			eventmarkers.push(eventmarker);
			var eventInfoWindow = new google.maps.InfoWindow({
				content: title
			});
			infoWindows.push(eventInfoWindow);
			google.maps.event.addListener(eventmarker, 'click', function() {
				for (var i = 0; i < infoWindows.length; i++) {
					infoWindows[i].close();
				}
				eventInfoWindow.open(map, eventmarker);
			});
		    $.ajax({  
		        type: 'POST',  
		        url: '/events/new_event', 
		        dataType : 'json', 
		        data: {
		        		title: title,
		        		description: description,
		        		start_time: start_time,
		        		end_time: end_time,
		        		group_ids: groups,
		        		lat: eventmarker.position.lat(),
		        		lng: eventmarker.position.lng()
		        	 },
		        success: function(data) {
		        	google.maps.event.addListener(eventmarker, 'mouseup', function() {
					    $.ajax({  
					        type: 'POST',  
					        url: '/events/update_location', 
					        data: {
					        		event_ids: data,
					        		lat: eventmarker.position.lat(),
					        		lng: eventmarker.position.lng()
					        	 },
					        success: function() {
					        }
					    });
				    });
		        }
		    });

		    //update
			
			eventmarker.setDraggable(false);
			eventmarker.setDraggable(true);
			$('#addEventModal').modal('toggle');
		}


		$('[data-dismiss=modal]').on('click', function (e) {
		    var $t = $(this),
		        target = $t[0].href || $t.data("target") || $t.parents('.modal') || [];

		  $(target)
		    .find("input,textarea,select")
		       .val('')
		       .end()
		    .find("input[type=checkbox], input[type=radio]")
		       .prop("checked", "")
		       .end();
		});

	</script>
</div>

<div class="modal fade" id="addEventModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<%= form_for(event = Event.new) do |f| %>
			<div class = "modal-header">
				<h3 class = "center"> Add A New Event</h3>
			</div>
			<div class="modal-body">
				<div class="container">
					<%= f.text_field :title, :placeholder => "Event Name" %><br /><br />
					<%= f.text_area :description, :placeholder => "Event Description", :size => "30x5" %><br /><br />
					<input id="start_time" type="text" placeholder="Start Time"><br /><br />
					<input id="end_time" type="text" placeholder="End Time"><br /><br />
					<div id="groupselectdiv">
						<select data-placeholder="Choose a Group" class="chosen-select" id="chosenselected" multiple  tabindex="4">
							<option value=""></option>
							<% current_user.groups.each do |group| %>
							<option value="<%= group.id %>"><%= group.name %></option>
							<% end %>
						</select>
					</div>
					<script>
					$(".chosen-select").chosen({no_results_text: "Group not found", width: "100%"});
					$('#start_time').datetimepicker({
					  minDate:'0',
					  format:'m/d/Y H:i'
					});
					$('#end_time').datetimepicker({
					  minDate:'0',
					  format:'m/d/Y H:i'
					});
					</script>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				<button type="button" id="addeventsubmitbutton" class="btn btn-primary" onclick="ce($('#event_title').val(), $('#event_description').val(), $('#start_time').val(), $('#end_time').val(), $('#chosenselected').val());">Create</button>
			</div>
		</div>
		<% end %>
	</div>
</div>