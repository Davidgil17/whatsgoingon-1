<% cuid = current_user.id %>
<div class="center">

	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry&sensor=false"></script>
	    
	<article>
		<p id="loading">Finding your location: <span id="status">checking...</span></p>
	</article>
	<script>
		function success(position) {
			var s = document.querySelector('#status');

			if (s.className == 'success') {
		    	// not sure why we're hitting this twice in FF, I think it's to do with a cached result coming back    
		    	return;
			}

			s.innerHTML = "found you!";
			s.className = 'success';

			var mapcanvas = document.createElement('div');
			mapcanvas.id = 'mapcanvas';
			mapcanvas.style.height = ($(document).height() - 51) + 'px';
			mapcanvas.style.width = ($(document).width()) + 'px';

			$("#loading").css("display","none");

			

			document.querySelector('article').appendChild(mapcanvas);

			var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
			var latlngTest = new google.maps.LatLng(position.coords.latitude, position.coords.longitude + 0.00005);

			var myOptions = {
				zoom: 18,
				center: latlng,
				zoomControl: false,
				streetViewControl: false,
				navigationControlOptions: {style: google.maps.NavigationControlStyle.DEFAULT},
				mapTypeId: google.maps.MapTypeId.ROADMAP,
				mapTypeControl: true,
    			mapTypeControlOptions: {
      			style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
    			}
			};
			map = new google.maps.Map(document.getElementById("mapcanvas"), myOptions);

			<% if (params.has_key?(:lat) && params.has_key?(:lng)) %>
			<%= "map.setCenter(new google.maps.LatLng(" + params[:lat] + ", " + params[:lng] + "));" %>
			<% end %>

			var markers = [];
			var infoWindows = [];

			

//******HERE STARTS MAPPING OF BRANDEIS, THIS WILL BE MOVED**************//
		var buildings = ["SSC", "Library", "Usdan", "Usen", "Renfield", "Deroy", "Shapiro", "Rosie North", "Rosie East", "Rosie South", "SCC", "Sherman", "Ridgewood A", "Ridgewood B", "Ridgewood C", "Reitman", "Cable", "Gordon", "Scheffres", "Hass", "Pom", "ICC", "Rabb Building", "Olin-Sang", "Golding", "Lown", "Shiffman", "Mandel", "Heller", "ASAC", "Castle", "Brown", "Schwartz", "Ziv 127", "Ziv 128", "Ziv 129", "Ziv 130", "Admissions", "Slosberg"];

		<% buildingsArraySize = 38 %>

		var opac = .35;

		<%= render file: "pages/buildings.js", layout: false, content_type: 'text/plain' %>

	  	<% for i in 0..buildingsArraySize %>
	  	<%= raw "building" + i.to_s + ".setMap(map);" %>
	  	<% end %>

		  

//*********HERE ENDS MAPPING OF BRANDEIS******************//

			var mymarker = new google.maps.Marker({
				position: latlng, 
				map: map, 
				title:"You are here! (at least within a "+position.coords.accuracy+" meter radius)",
				zIndex: 2,
				<% imgpath = asset_path('marker' + current_user.color_status.to_s.to_s + '.png') %>
				<%= raw "icon: '" + imgpath + "'" %>

			});
			markers.push(mymarker);
			
			var myinfowindow = new google.maps.InfoWindow({
				content: "You are here!"
			});
			infoWindows.push(myinfowindow);

			google.maps.event.addListener(mymarker, 'click', function() {
				for (var i = 0; i < infoWindows.length; i++) {
					infoWindows[i].close();
				}
				myinfowindow.open(map, mymarker);
			});

			<% most_recent_friends = Friend.most_recent(cuid) %>
			<% for i in 0...most_recent_friends.length %>
			<%=	raw "var newlatlng"+i.to_s+" = new google.maps.LatLng(" + most_recent_friends[i][:latitude].to_s + ", " + most_recent_friends[i][:longitude].to_s + ");" %>
			<% imgpath = asset_path('marker' + most_recent_friends[i][:color_status].to_s + '.png') %>
			<%= raw "var newmarker"+i.to_s+" = new google.maps.Marker({position: newlatlng"+i.to_s+", map: map, icon: '" + imgpath + "' });" %>
			<%= raw "markers.push(newmarker"+i.to_s+");" %>
			<%= raw "var myinfowindow"+i.to_s+" = new google.maps.InfoWindow({content: \"" + most_recent_friends[i][:name] + "\" });" %>
			<%= raw "infoWindows.push(myinfowindow"+i.to_s+");" %>
			<%= raw "google.maps.event.addListener(newmarker"+i.to_s+", \'click\', function() {for (var i = 0; i < infoWindows.length; i++) {infoWindows[i].close();}myinfowindow"+i.to_s+".open(map, newmarker"+i.to_s+");});" %>
			<% end %>

			var mybuilding = "";
		  <% for i in 0..buildingsArraySize %>
		  <%= raw "if (google.maps.geometry.poly.containsLocation(latlng,building" +i.to_s+ ")) { mybuilding = buildings[" + i.to_s + "]; console.log(mybuilding)}" %>
		  <% end %>

		
			$.ajax({
			    type: 'POST',  
			    url: 'users/update_location', 
			    data: { latitude: latlng.lat(), longitude: latlng.lng(), location: mybuilding },
			    success: function(response) {
			    }
			});

			setInterval(function() {
			    $.ajax({  
			    type: 'POST',  
			    url: 'users/update_location', 
			    data: { latitude: latlng.lat(), longitude: latlng.lng(), location: mybuilding },
			    success: function(response) {
			        
			    }
			});
			}, 10 * 60 * 1000); // 10 * 60 * 1000 milsec




//// ******** BUTTON

			// Create a div to hold the control.
			var controlDiv = document.createElement('div');

			// Set CSS styles for the DIV containing the control
			// Setting padding to 5 px will offset the control
			// from the edge of the map.
			controlDiv.style.padding = '5px';

			// Set CSS for the control border.
			var controlUI = document.createElement('div');
			controlUI.style.backgroundColor = 'white';
			controlUI.style.cursor = 'pointer';
			controlUI.style.textAlign = 'center';
			controlUI.title = 'Click to refresh map';
			controlDiv.appendChild(controlUI);

			// Set CSS for the control interior.
			var controlText = document.createElement('div');
			controlText.style.fontFamily = 'Arial,sans-serif';
			controlText.style.fontSize = '12px';
			controlText.style.paddingLeft = '4px';
			controlText.style.paddingRight = '4px';
			controlText.innerHTML = '<strong>Refresh</strong>';
			controlUI.appendChild(controlText);

			// refresh button
			google.maps.event.addDomListener(controlUI, 'click', function() {
				// clear markers
				for (var i = 0; i < markers.length; i++) {
				    markers[i].setMap(null);
				}

				

				markers = [];
				// add my location
		   		var mymarker = new google.maps.Marker({
					position: latlng, 
					map: map, 
					title:"You are here! (at least within a "+position.coords.accuracy+" meter radius)",
					zIndex: 2,
					<% imgpath = asset_path('marker' + current_user.color_status.to_s.to_s + '.png') %>
					<%= raw "icon: '" + imgpath + "'" %>
				});
		
				markers.push(mymarker);
	
				var myinfowindow = new google.maps.InfoWindow({
					content: "You are here!"
				});
				infoWindows.push(myinfowindow);

				google.maps.event.addListener(mymarker, 'click', function() {
					for (var i = 0; i < infoWindows.length; i++) {
						infoWindows[i].close();
					}
					myinfowindow.open(map, mymarker);
				});
				$.getJSON( "friends/getmarkers.json", function( data ) {
					$.each( data, function( key, val ) {
			            var newlatLng = new google.maps.LatLng(val[1]['lat'], val[2]['lng']);
			            var newmarker = new google.maps.Marker({
			                position: newlatLng,
			                map: map,
			                icon: val[3]['color_status']
			            });
			            markers.push(newmarker);
			            var newmyinfowindow = new google.maps.InfoWindow({
							content: val[0]['name']
						});
						infoWindows.push(newmyinfowindow);
						google.maps.event.addListener(newmarker, 'click', function() {
							for (var i = 0; i < infoWindows.length; i++) {
								infoWindows[i].close();
							}
							newmyinfowindow.open(map, newmarker);
						});	
	  				});
				});

				$.ajax({  
				    type: 'POST',  
				    url: 'users/update_location', 
				    data: { latitude: latlng.lat(), longitude: latlng.lng(), location: mybuilding },
				    success: function(response) {  
				    }
				});

  			});

			controlDiv.index = 1;
  			map.controls[google.maps.ControlPosition.TOP_RIGHT].push(controlDiv);

			//// ******** BUTTON

		}




		function error(msg) {
			var s = $('#status');
            s.html(typeof msg == 'string' ? msg : "failed");
            s.addClass('fail');  
		}

		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(success, error);
		} else {
			error('not supported');
		}

	</script>
</div>